server.port=8013
#log4j2
logging.config=classpath:log4j2.xml
#thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
#mybatis
#通过package, 可以直接指定package的名字， mybatis会自动扫描你指定包下面的javabean,
#并且默认设置一个别名，默认的名字为： javabean 的首字母小写的非限定类名来作为它的别名。
#也可在javabean 加上注解@Alias 来自定义别名， 例如： @Alias(user)
#<package name="com.dy.entity"/> 扫描跟数据库对应表的对象
mybatis.type-aliases-package=com.imooc.miaosha.domain
#把下划线转化成驼峰
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
#3秒钟
mybatis.configuration.default-statement-timeout=3000
#扫描接口对应的xml配置文件
mybatis.mapper-locations=classpath:com/imooc/miaosha/dao/*.xml
#druid  Druid是Java语言中最好的数据库连接池。Druid能够提供强大的监控和扩展功能
spring.datasource.url=jdbc:mysql://47.98.210.68:3306/miaosha?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&rewriteBatchedStatements=TRUE&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=Menglin@032577
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.filters=stat
spring.datasource.maxActive=1000
spring.datasource.initialSize=100
spring.datasource.maxWait=60000
spring.datasource.minldle=500
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource..testOnBorrow=false
spring.datasource..poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
#redis配置
redis.host=47.98.210.68
redis.port=6353
redis.timeout=10
redis.password=menglinjun
redis.poolMaxTotal=1000
redis.poolMaxIdle=500
redis.poolMaxWait=500
#静态资源
#是否启用默认资源处理。
spring.resources.add-mappings=true
#资源处理程序所服务资源的缓存周期。如果未指定持续时间后缀，则将使用秒。则以秒为单位。
spring.resources.cache-period=3600
#是否在资源链中启用缓存。
spring.resources.chain.cache=true
#是否启用已压缩资源的解析（gzip，brotli）。
spring.resources.chain.gzipped=true
#是否启用Spring资源处理链。默认情况下，禁用，除非至少启用了一个策略。
spring.resources.chain.enabled=true
#是否启用HTML5应用程序缓存清单重写。
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/

#消息确认模式，消费发出去异步等待broker响应，再写一个监听器监听响应结果 http://menglinjun.top:15672
spring.rabbitmq.addresses=127.0.0.1:5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
#侦听器调用者线程的最小数量。
spring.rabbitmq.listener.simple.concurrency= 10
spring.rabbitmq.listener.simple.max-concurrency= 10
#每个消费者可能未完成的未确认消息的最大数量。
spring.rabbitmq.listener.simple.prefetch= 1
#是否在启动时自动启动容器。
spring.rabbitmq.listener.simple.auto-startup=true
#默认情况下，拒绝的交付是否重新排队。
spring.rabbitmq.listener.simple.default-requeue-rejected= true
#是否启用发布重试。
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.retry.initial-interval=1000
spring.rabbitmq.template.retry.max-attempts=3
spring.rabbitmq.template.retry.max-interval=10000
spring.rabbitmq.template.retry.multiplier=1.0
